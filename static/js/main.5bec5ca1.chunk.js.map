{"version":3,"sources":["types/FilterType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","utils/loading.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterType","TodoList","todos","pickTodo","pickedTodo","className","map","todo","isPicked","id","cn","completed","title","type","onClick","All","Active","Completed","TodoFilter","setFilter","setSearchQuery","searchQuery","onSubmit","event","preventDefault","onChange","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","useDataAfterDelay","useState","data","setData","loading","setLoading","error","setError","useEffect","response","catch","finally","TodoModal","userId","getUser","user","userLoading","href","name","App","setPickedTodo","filter","filteredTodos","setFilteredTodos","todosFromAPI","todosLoading","query","trim","toLowerCase","filterByQuery","includes","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bec5ca1.chunk.js","sourcesContent":["export enum FilterType {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  pickTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n  pickedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, pickTodo, pickedTodo }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const isPicked = pickedTodo?.id === todo.id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': isPicked,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n\n              {todo.completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                ) : (\n                  <td className=\"is-vcentered\" />\n                )}\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => pickTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={cn({\n                        'far fa-eye': !isPicked,\n                        'far fa-eye-slash': isPicked,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { FilterType } from '../../types/FilterType';\n\ninterface Props {\n  setFilter: React.Dispatch<React.SetStateAction<FilterType>>;\n  searchQuery: string;\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst { All, Active, Completed } = FilterType;\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter,\n  setSearchQuery,\n  searchQuery,\n}) => {\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setFilter(event.target.value as FilterType)}\n          >\n            <option value={All}>All</option>\n            <option value={Active}>Active</option>\n            <option value={Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={searchQuery}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => setSearchQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useState, useEffect } from 'react';\n\nexport function useDataAfterDelay<T>(fetch: () => Promise<T>) {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetch()\n      .then((response) => setData(response))\n      .catch(() => setError('Problems with loading todos. Try later.'))\n      .finally(() => setLoading(false));\n  }, [fetch]);\n\n  return { data, loading, error };\n}\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { useDataAfterDelay } from '../../utils/loading';\n\ninterface Props {\n  todo: Todo;\n  pickTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, pickTodo }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const {\n    data: user,\n    loading: userLoading,\n  } = useDataAfterDelay(() => getUser(userId));\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {userLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => pickTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterType } from './types/FilterType';\nimport { Loader } from './components/Loader';\nimport { useDataAfterDelay } from './utils/loading';\n\nconst { All, Active, Completed } = FilterType;\n\nconst filterTodos = (\n  todos: Todo[],\n  filter: FilterType,\n  searchQuery: string,\n) => {\n  const query = searchQuery.trim().toLowerCase();\n\n  const filterByQuery = (todo: Todo) => todo.title.toLowerCase().includes(query);\n\n  switch (filter) {\n    case Active:\n      return todos.filter((todo: Todo) => !todo.completed && filterByQuery(todo));\n\n    case Completed:\n      return todos.filter((todo: Todo) => todo.completed && filterByQuery(todo));\n\n    case All:\n    default:\n      return todos.filter(filterByQuery);\n  }\n};\n\nexport const App: React.FC = () => {\n  const [pickedTodo, setPickedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<FilterType>(All);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const {\n    data: todosFromAPI,\n    loading: todosLoading,\n    error,\n  } = useDataAfterDelay(getTodos);\n\n  useEffect(() => {\n    if (todosFromAPI) {\n      setFilteredTodos(filterTodos(todosFromAPI, filter, searchQuery));\n    }\n  }, [filter, searchQuery, todosFromAPI]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n              />\n            </div>\n\n            {!error ? (\n              <div className=\"block\">\n                {todosLoading && <Loader />}\n                {!todosLoading && (\n                  <TodoList\n                    todos={filteredTodos}\n                    pickTodo={setPickedTodo}\n                    pickedTodo={pickedTodo}\n                  />\n                )}\n              </div>\n            ) : (\n              <p>{error}</p>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {pickedTodo && <TodoModal todo={pickedTodo} pickTodo={setPickedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}